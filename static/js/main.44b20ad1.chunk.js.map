{"version":3,"sources":["img/delete_basket.svg","img/people.svg","components/Box/Box.tsx","context.ts","components/Box/Items.tsx","components/Box/Participants.tsx","components/Box/Results.tsx","components/Box/Spending.tsx","components/Calculation.tsx","library.js","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Box","props","useState","modalShouldOpen","setModalShouldOpen","closeModal","className","title","toLowerCase","fields","map","field","index","type","name","options","option","value","text","placeholder","onClick","event","properties","inputs","target","parentNode","querySelectorAll","input","selects","select","selectedOptions","okClickHandler","buttonShouldBe","children","LibraryContext","React","createContext","Items","context","useContext","addItem","a","maxId","library","data","items","length","reduce","prev","current","id","tempLibrary","initialParticipantsID","participants","participant","push","sum","participantsId","updateLibrary","removeItem","filter","item","changeParticipantList","itemId","participantId","find","itemIndex","indexOf","includes","splice","total","cur","src","people","alt","checked","onChange","delete_basket","Participants","removeParticipant","spending","addParticipant","newParticipant","Results","approve","result","results","resultIndex","approved","preparedData","temp","fromId","from","to","toId","Spending","addSpending","amount","removeSpending","participantName","Calculation","JSON","parse","localStorage","getItem","setLibrary","shouldShowResults","setShouldShowResults","setItem","stringify","calculate","spendingAmount","itemsAmount","debtors","creditors","forEach","spends","debts","isDebtor","debtor","balance","creditor","Provider","owner","date","App","menuShouldOpen","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.44b20ad1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/delete_basket.1edb1a32.svg\";","export default __webpack_public_path__ + \"static/media/people.0c1eddfc.svg\";","import React, {useState} from \"react\";\n\ninterface Option {\n    value: string|number,\n    text: string\n}\n\ninterface Field {\n    type: string,\n    name: string,\n    placeholder?: string\n    options?: Array<Option>\n}\n\ninterface BoxProps {\n    title: string,\n    buttonShouldBe: boolean,\n    okClickHandler?: (properties: any) => void,\n    fields?: Array<Field>\n    children: any\n}\n\ninterface MyState {\n    modalShouldOpen: boolean\n}\n\nconst Box = (props: BoxProps) => {\n    const [modalShouldOpen, setModalShouldOpen] = useState(false);\n    const openModal = () => {\n        setModalShouldOpen(true);\n    }\n    const closeModal = () => {\n        setModalShouldOpen(false);\n    }\n    const callHandler = (event: any) => {\n        let properties: any = {};\n        const inputs = event.target.parentNode.querySelectorAll('input');\n        for (let input of inputs) {\n            properties[input.name] = input.value;\n            input.value = '';\n        }\n        const selects = event.target.parentNode.querySelectorAll('select');\n        for (let select of selects) {\n            properties[select.name] = select.selectedOptions[0].value;\n        }\n        if (props.okClickHandler && properties) {\n            props.okClickHandler(properties);\n        }\n        closeModal();\n    }\n\n    return (\n        <div className={'box ' + props.title.toLowerCase()}>\n            {props.fields ?\n                <div className={'box_add-modal' + (modalShouldOpen ? ' open' : '')}>\n                    {props.fields.map((field, index) => (\n                        field.type === 'select' ?\n                            <select name={field.name} key={index}>\n                                {field.options ?\n                                    field.options.map((option: Option, index) => (\n                                        <option value={option.value} key={index}>{option.text}</option>\n                                    )) : ''\n                                }\n                            </select> :\n                            <input type={field.type} name={field.name} placeholder={field.placeholder} key={index} />\n                    ))}\n                    <button onClick={callHandler}>OK</button>\n                </div>\n                : ''\n            }\n            <div className='box-header'>\n                <h2>{props.title}</h2>\n                {props.buttonShouldBe ?\n                    <button onClick={openModal}>+Add</button>\n                    : ''\n                }\n            </div>\n            {props.buttonShouldBe ?\n                <div className={'shadow-bg' + (modalShouldOpen ? ' open' : '')} onClick={closeModal}></div>\n                : ''\n            }\n            {props.children}\n        </div>\n    )\n}\n\nexport default Box;","import React from \"react\";\nimport {iLibrary} from \"./interfaces\";\n\ninterface iLibraryContext {\n    library: iLibrary\n    updateLibrary: (library: iLibrary) => Promise<void>\n}\n\nexport const LibraryContext = React.createContext({} as iLibraryContext);","import React, {useContext} from \"react\";\nimport delete_basket from \"../../img/delete_basket.svg\";\nimport edit from \"../../img/edit.svg\";\nimport people from \"../../img/people.svg\";\nimport Box from \"./Box\";\nimport {LibraryContext} from \"../../context\";\n\nconst Items = () => {\n    const context = useContext(LibraryContext);\n    const fields = [{type: 'text', name: 'title', placeholder: 'Item Title'} ,{type: 'number', name: 'sum', placeholder: 'Enter Sum'}];\n\n    const addItem = async (properties: any) => {\n        const maxId = context.library.data.items.length ? context.library.data.items.reduce((prev: any, current: any) => current.id > prev.id ? current : prev).id : 0;\n        const tempLibrary = context.library;\n        const initialParticipantsID = context.library.data.participants.map((participant) => participant.id);\n        tempLibrary.data.items.push({id: maxId + 1, name: properties.title, sum: +properties.sum, participantsId: initialParticipantsID });\n        await context.updateLibrary({ ...tempLibrary });\n    }\n\n    const removeItem = async (index: number) => {\n        let tempLibrary = context.library;\n        tempLibrary.data.items = context.library.data.items.filter((item: any) => item.id !== index);\n        await context.updateLibrary({ ...tempLibrary });\n    }\n\n    const changeParticipantList = async (itemId: number, participantId: number) => {\n        let tempLibrary = context.library;\n        const item = tempLibrary.data.items.find((item) => item.id === itemId);\n        if (item) {\n            const itemIndex = tempLibrary.data.items.indexOf(item);\n            if (item.participantsId.includes(participantId)) {\n                const index = item.participantsId.indexOf(participantId);\n                tempLibrary.data.items[itemIndex].participantsId.splice(index, 1);\n            } else {\n                tempLibrary.data.items[itemIndex].participantsId.push(participantId)\n            }\n        }\n        await context.updateLibrary({ ...tempLibrary });\n    }\n\n    let participants: any = [];\n    for (let participant of context.library.data.participants) {\n        participants[participant.id] = participant.name;\n    }\n\n    const total = context.library.data.items.length ? context.library.data.items.reduce((prev, cur) => {\n        return { ...cur, sum: +cur.sum + +prev.sum }\n    }).sum : 0;\n\n    return(\n        <Box title={'Items'} buttonShouldBe={true} fields={fields} okClickHandler={addItem}>\n            {context.library.data.items.map((item) => (\n                    <div className='box_item-box' key={item.id}>\n                        <p>{item.name} ---- {item.sum}</p>\n                        <img src={people} alt=\"people button\" className='item-box_button item-box_button_people'/>\n                        <ul className='item-box_participants-list'>\n                            {participants.map((value: string, index: number) => (\n                                <li>\n                                    <label>\n                                        <input type=\"checkbox\"\n                                               checked={item.participantsId.includes(index)}\n                                               onChange={() => changeParticipantList(item.id, index)}/>\n                                        <span>{value}</span>\n                                    </label>\n                                </li>\n                            ))}\n                        </ul>\n                        <img src={delete_basket}  onClick={() => removeItem(item.id)} alt=\"delete button\" className='item-box_button item-box_button_delete'/>\n                    </div>\n            ))}\n            <p>Total: {total}</p>\n        </Box>\n    )\n}\n\nexport default Items;","import React, {useContext, useEffect, useState} from \"react\";\nimport Box from \"./Box\";\nimport delete_basket from '../../img/delete_basket.svg';\nimport {LibraryContext} from \"../../context\";\nimport {iLibrary} from \"../../interfaces\";\n\n\nconst Participants = () => {\n    const context = useContext(LibraryContext);\n    const fields = [{type: 'text', name: 'name', placeholder: 'Enter participant name'}];\n\n    const removeParticipant = async (index: number) => {\n        let tempLibrary = context.library;\n        tempLibrary.data.participants = context.library.data.participants.filter((participant: any) => participant.id !== index);\n        tempLibrary.data.spending = context.library.data.spending.filter((spending: any) => spending.participantId !== index);\n        await context.updateLibrary({ ...tempLibrary });\n    }\n\n    const addParticipant = async (properties: any) => {\n        let maxId = context.library.data.participants.length ? context.library.data.participants.reduce((prev: any, current: any) => current.id > prev.id ? current : prev).id : 0;\n        let tempLibrary = context.library;\n        let newParticipant = {id: maxId + 1, name: properties.name};\n        tempLibrary.data.participants.push(newParticipant);\n        await context.updateLibrary({...tempLibrary});\n    }\n\n    return (\n        <Box title={'Participants'} buttonShouldBe={true} fields={fields} okClickHandler={addParticipant}>\n            {context.library.data.participants.map((participant) => (\n                <div className='box_item-box' key={participant.id}>\n                    <p>{participant.name}</p>\n                    <img onClick={() => removeParticipant(participant.id)} src={delete_basket} alt=\"delete button\" className='item-box_button item-box_button_delete'/>\n                </div>\n            ))}\n\n            <p>Total: {context.library.data.participants.length}</p>\n        </Box>\n    )\n}\n\nexport default Participants;","import React, {useContext} from \"react\";\nimport Box from \"./Box\";\nimport {LibraryContext} from \"../../context\";\n\n\nconst Results = () => {\n    const context = useContext(LibraryContext);\n\n    const approve = async (id: number) => {\n        let tempLibrary = context.library;\n        const result = tempLibrary.results.find((result) => result.id === id);\n        if (result) {\n            const resultIndex = tempLibrary.results.indexOf(result);\n            tempLibrary.results[resultIndex].approved = !tempLibrary.results[resultIndex].approved\n        }\n        await context.updateLibrary({ ...tempLibrary });\n    }\n\n    const preparedData = [];\n    for (let result of context.library.results) {\n        let temp = context.library.data.participants.find((participant) => participant.id === result.fromId);\n        const from = temp ? temp.name : 'Unknown';\n        temp = context.library.data.participants.find((participant) => participant.id === result.toId);\n        const to = temp ? temp.name : 'Unknown';\n        preparedData.push({\n            id: result.id,\n            from: from,\n            to: to,\n            sum: result.sum,\n            approved: result.approved\n        })\n    }\n\n    return(\n        <Box title={'Results'} buttonShouldBe={false}>\n            {preparedData.map((result) => (\n                <div className={result.approved ? 'box_item-box box_item-box_approved' : 'box_item-box'} key={result.id}>\n                    <p>From {result.from} to {result.to} - {result.sum}</p>\n                    <button onClick={() => approve(result.id)} className='item-box_button item-box_button_approve'></button>\n                </div>\n            ))}\n        </Box>\n    )\n}\n\nexport default Results;","import React, {useContext} from \"react\";\nimport delete_basket from \"../../img/delete_basket.svg\";\nimport Box from \"./Box\";\nimport {LibraryContext} from \"../../context\";\n\nconst Spending = () => {\n    const context = useContext(LibraryContext);\n    const fields = [{type: 'select', name: 'participant', options: context.library.data.participants.map((participant) => { return {value: participant.id, text: participant.name}})},{type: 'number', name: 'sum', placeholder: 'Enter Sum'}];\n\n    const addSpending = async (properties: any) => {\n        const maxId = context.library.data.spending.length ? context.library.data.spending.reduce((prev: any, current: any) => current.id > prev.id ? current : prev).id : 0;\n        const tempLibrary = context.library;\n        tempLibrary.data.spending.push({id: maxId + 1, participantId: +properties.participant, amount: +properties.sum });\n        await context.updateLibrary({ ...tempLibrary });\n    }\n\n    const removeSpending = async (index: number) => {\n        let tempLibrary = context.library;\n        tempLibrary.data.spending = context.library.data.spending.filter((spending: any) => spending.id !== index);\n        await context.updateLibrary({ ...tempLibrary });\n    }\n\n    const items = context.library.data.spending.map((spending) => {\n        let participant = context.library.data.participants.find((participant) => participant.id === spending.participantId);\n        let participantName = participant && participant.name ? participant.name : 'Unknown';\n        return {\n            id: spending.id,\n            participantName: participantName,\n            amount: spending.amount\n        }\n    })\n\n    // let total = 0;\n    // for (let spending of context.library.data.spending) {\n    //     total += spending.amount;\n    // }\n\n    const total = context.library.data.spending.length ? context.library.data.spending.reduce((prev, cur) => {\n        // let result = { ...cur };\n        // result.amount = +cur.amount + +prev.amount;\n        // return result;\n        return { ...cur, amount: +cur.amount + +prev.amount }\n    }).amount : 0;\n\n    return(\n        <Box title={'Spending'} buttonShouldBe={true} fields={fields} okClickHandler={addSpending}>\n            {items.map((spending) => (\n                <div className='box_item-box' key={spending.id}>\n                    <p>{spending.participantName}: {spending.amount}</p>\n                    <img onClick={() => removeSpending(spending.id)} src={delete_basket} alt=\"delete button\" className='item-box_button item-box_button_delete'/>\n                </div>\n            ))}\n            <p>Total: {total}</p>\n        </Box>\n    )\n}\n\nexport default Spending;","import React, {useContext, useState} from \"react\";\nimport Items from \"./Box/Items\";\nimport Participants from \"./Box/Participants\";\nimport Results from \"./Box/Results\";\nimport Spending from \"./Box/Spending\";\nimport {LibraryContext} from \"../context\";\nimport {iLibrary} from \"../interfaces\";\n\nconst Calculation = () => {\n    const [library, setLibrary] = useState(JSON.parse(localStorage.getItem('library') || ''));\n    const [shouldShowResults, setShouldShowResults] = useState(false);\n    const context = useContext(LibraryContext);\n    const updateLibrary = async (library: iLibrary) => {\n        setLibrary(library);\n        setShouldShowResults(false);\n        await localStorage.setItem('library', JSON.stringify(library));\n    }\n\n    const calculate = async () => {\n        const spendingAmount = library.data.spending.length ? library.data.spending.reduce((prev: any, cur: any) => {\n            return {...cur, amount: +cur.amount + +prev.amount}\n        }).amount : 0;\n\n        const itemsAmount = library.data.items.length ? library.data.items.reduce((prev: any, cur: any) => {\n            return {...cur, sum: +cur.sum + +prev.sum}\n        }).sum : 0;\n\n        if (spendingAmount !== itemsAmount) return;\n\n        let debtors: Array<any> = [];\n        let creditors: Array<any> = [];\n\n        library.data.participants.forEach((participant: any) => {\n            let spends = 0;\n            for (let spending of library.data.spending) {\n                if (spending.participantId === participant.id) spends += spending.amount;\n            }\n            let debts = 0;\n            for (let item of library.data.items) {\n                if (item.participantsId.length && item.participantsId.includes(participant.id)) {\n                    debts += item.sum / item.participantsId.length;\n                }\n            }\n            const isDebtor = debts > spends;\n            if (isDebtor) {\n                debtors.push({\n                    id: participant.id,\n                    name: participant.name,\n                    debtor: isDebtor,\n                    balance: debts - spends,\n                })\n            } else {\n                creditors.push({\n                    id: participant.id,\n                    name: participant.name,\n                    debtor: isDebtor,\n                    balance: spends - debts,\n                })\n            }\n        })\n\n        let tempLibrary = library;\n        tempLibrary.results = [];\n\n        for (let creditor of creditors) {\n            for (let debtor of debtors) {\n                if (creditor.balance <= 0) break;\n                if (debtor.balance <= 0) continue;\n                let sum = 0;\n                if (creditor.balance >= debtor.balance) {\n                    sum = debtor.balance;\n                    creditor.balance -= sum;\n                } else {\n                    sum = creditor.balance;\n                    debtor.balance -= sum;\n                }\n                if (sum > 0) {\n                    const maxId = tempLibrary.results.length ? tempLibrary.results.reduce((prev: any, current: any) => current.id > prev.id ? current : prev).id : 0;\n                    tempLibrary.results.push({\n                        id: maxId,\n                        fromId: debtor.id,\n                        toId: creditor.id,\n                        sum: sum,\n                        approved: false,\n                    })\n                }\n            }\n        }\n\n        await updateLibrary({ ...tempLibrary });\n        setShouldShowResults(true);\n    }\n\n    return (\n        <div>\n            <LibraryContext.Provider value={{updateLibrary, library}}>\n                <div>\n                    <Participants/>\n                    <Spending/>\n                    <Items/>\n                    {shouldShowResults ? <Results/> : null}\n                </div>\n                <button onClick={calculate}>Calculate</button>\n            </LibraryContext.Provider>\n        </div>\n    )\n\n}\n\nexport default Calculation;","export default {\n    owner: '',\n    date: '',\n    name: '',\n    id: 1,\n    data: {\n        participants: [],\n        spending: [],\n        items: []\n    },\n    results: [{id: 1, fromId: 1, toId: 2, sum: 1200, approved: false}]\n}","import React, {useState} from 'react';\nimport './App.css';\nimport Calculation from \"./components/Calculation\";\nimport library from \"./library.js\";\n\nfunction App() {\n    const [menuShouldOpen, setMenuShouldOpen] = useState(false);\n    const openMenu = () => {\n        setMenuShouldOpen(!menuShouldOpen);\n    }\n    const putLibrary = () => {\n        localStorage.setItem('library', JSON.stringify(library));\n    }\n    if (!localStorage.getItem('library')) {\n        putLibrary();\n        console.log('put')\n    }\n  return (\n    <div className=\"app\">\n        <header className='app-header'>\n            {/*<div className='menu'>*/}\n            {/*    <div onClick={openMenu} className={'menu-button' + (menuShouldOpen? ' open' : '')}>*/}\n            {/*        <span></span><span></span><span></span>*/}\n            {/*    </div>*/}\n            {/*    <div className={'menu-area' + (menuShouldOpen? ' open' : '')}>*/}\n            {/*        <ul></ul>*/}\n            {/*    </div>*/}\n            {/*</div>*/}\n            <h1 className='app-name'>BillShare</h1>\n        </header>\n        <main className={'app-content' + (menuShouldOpen? ' menu_open' : '')}>\n            <Calculation />\n        </main>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}